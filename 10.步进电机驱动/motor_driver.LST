C51 COMPILER V9.00   MOTOR_DRIVER                                                          04/21/2016 21:57:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MOTOR_DRIVER
OBJECT MODULE PLACED IN motor_driver.OBJ
COMPILER INVOKED BY: G:\Keil\C51\BIN\C51.EXE motor_driver.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2           *      2016-4-21 21:08 PM ★4
   3           ================================================================
   4          
   5                  开发板上使用的步进电机型号为： 28BYJ-48，型号的含义如下：
   6                  
   7                          28――步进电机的有效最大外径是28毫米
   8                          B――表示是步进电机
   9                          Y――表示是永磁式
  10                          J――表示是减速型
  11                          48――表示四相八拍
  12                          
  13           ================================================================
  14          
  15                  步进电机有多种工作模式，主要的工作模式称为 4 相 8 拍
  16                  这里假设定子线圈名称分别为 ABCD 四项，驱动器为低电平有效，八拍如下：
  17                          1. 首先导通 A，所以控制信号应该为       0111
  18                          2. 接着导通 A 和 B，控制信号应该为      0011
  19                          3. 接着导通 B，控制信号应该为           1011
  20                          4. 接着导通 B 和 C，控制信号应该为      1001
  21                          5. 接着导通 C，控制信号应该为           1101
  22                          6. 接着导通 C 和 D，控制信号应该为      1100
  23                          7. 接着导通 D，控制信号应该为           1110
  24                          8. 接着导通 D 和 A，控制信号应该为      0110
  25                          9. 回到第一步
  26          
  27                  所以输入按十六进制应该如下：
  28                          0x7， 0x3， 0xB， 0x9， 0xD， 0xC， 0xE， 0x6
  29                  如需反转步进电机，逆序即可
  30                  
  31           =================================================================
  32           
  33                  得到了控制信号，接下来就是找到控制信号变化的速度了，器件手册上注明控制信号应当小于 550Hz
  34                  550 Hz ---> 0.001818s ---> 1.8 ms ，可以得出结论定时器定时 2ms 就可以了。
  35          
  36           =================================================================
  37           
  38                  开发板上步进电机接 P1 口的低四位 P1^0、P1^1、P1^2、P1^3，显然操作 P1 口时不能改动其高四位的值
  39                  在 C 语言中有如下方法：
  40                          unsigned char tmp = 0;  // 定义中间变量
  41                          tmp = P1;                               // 读入 P1 的值
  42                          tmp = tmp & 0xF0;               // 本操作将低四位清零
  43                          
  44                                  //      tmp   = 8'bxxxx_xxxx
  45                                  //      0xF0  = 8'b1111_0000
  46                                  //      &       8'bxxxx_0000
  47                                                                                  
  48                          tmp = tmp | 0x0X;               // 修该 tmp 的低四位，0x0X 中的 X 为需要写入的值
  49          
  50                                  // tmp    = 8'bxxxx_0000
  51                                  // 0xFX   = 8'b0000_xxxx
  52                                  //      |       8'bxxxx_xxxx
  53          
  54                          P1 = tmp;                               // 将修改写回到 P1 口
  55          
C51 COMPILER V9.00   MOTOR_DRIVER                                                          04/21/2016 21:57:12 PAGE 2   

  56           ==================================================================
  57           
  58                  假设计数 cnt 需要从 0 记到 7，然后归 0 后从新计数，可以用以下判断语句实现
  59          
  60                          if(cnt>=8)
  61                                  cnt = 0;
  62                                  
  63                  这里有一个小技巧 cnt = cnt & 0x7; 可代替上面的判断（自然逼格也高出了不少 (*^__^*) )
  64          
  65                                          0x07 = 8'b0000_0111
  66                          cnt     =       0x00 = 8'b0000_0000
  67                                           = 8'b0000_0111         // 不变
  68          
  69                          cnt =   0x01 = 8'b0000_0001
  70                                                   = 8'b0000_0001         // 还是不变
  71          
  72                          cnt =   0x02、0x03 …… 0x06、0x07 时都不超过 3 位，和 0x07 相与后 都不会发生变化
  73          
  74                  但是，当计数器记到 0x08 时，也就是 8'b0000_1000， 这时 0x08 | 0x07 如下
  75          
  76                          cnt =   0x08 = 8'b0000_1000
  77                                          0x07 = 8'b0000_0111
  78                                                   = 8'b0000_0000         // cnt 自动归零了
  79                          
  80           ====================================================================   
  81          **/
  82          
  83          #include <reg52.h>
  84          unsigned char motor_tab[8] = {
  85                  0x07, 0x03, 0x0B, 0x09, 0x0D, 0x0C, 0x0E, 0x06
  86          };
  87          
  88          void timer0_set (void) {
  89   1              TMOD = 0x01;    //  定时器0 十六位计数模式
  90   1              TL0 = 0xCD;             //      设置为 2ms
  91   1              TH0 = 0xF8;
  92   1              EA = 1;                 // 打开总中断
  93   1              ET0 = 1;                // 打开定时器0 中断
  94   1              TR0 = 1;                // 打开定时器0
  95   1      }
  96          
  97          void main(void){
  98   1              timer0_set();
  99   1              while(1);
 100   1      }
 101          
 102          void timer0_interrupt(void) interrupt 1 {
 103   1              static unsigned char state = 0;
 104   1              unsigned char tmp;
 105   1              TL0 = 0xCD;
 106   1              TH0 = 0xF8;
 107   1              tmp = P1;
 108   1              tmp = tmp & 0xF0;
 109   1              tmp = tmp | motor_tab[state];
 110   1              P1 = tmp;
 111   1              state = state + 1;
 112   1              state = state & 0x07;
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     67    ----
C51 COMPILER V9.00   MOTOR_DRIVER                                                          04/21/2016 21:57:12 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
