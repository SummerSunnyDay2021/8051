C51 COMPILER V8.06   ANIMATION                                                             04/18/2016 05:33:04 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE ANIMATION
OBJECT MODULE PLACED IN animation.OBJ
COMPILER INVOKED BY: G:\Keil\C51\BIN\C51.EXE animation.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          sbit ADDR0 = P1^0;
   3          sbit ADDR1 = P1^1;
   4          sbit ADDR2 = P1^2;
   5          sbit ADDR3 = P1^3;
   6          sbit ENLED = P1^4;
   7          
   8          static  unsigned int mypic[4][8] = {
   9                  {0xFF,0xFF,0xFF,0xEF,0xFF,0xEF,0xC7,0xD7},
  10                  {0xFF,0xFF,0xEF,0xFF,0xFF,0xEF,0xC7,0xD7},
  11                  {0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xC7,0xD7},
  12                  {0xEF,0xFF,0xFF,0xFF,0xFF,0xEF,0xC7,0xD7}
  13          };
  14          
  15          static unsigned char m, j, cnt;
  16          static unsigned int pic[8];
  17          static unsigned int *p = pic;
  18          
  19          
  20          void main(void){
  21   1      
  22   1              ENLED = 0;
  23   1              ADDR3 = 0;
  24   1              // timer0 set
  25   1              TMOD = 0x11;
  26   1              TH0 = 0x4C;
  27   1              TL0 = 0x00;
  28   1              TH1 = 0xFC;
  29   1              TL1 = 0x66;
  30   1              // open timer 0
  31   1              TR0 = 1;
  32   1              TR1 = 1;
  33   1              P0 = 0xFF;
  34   1              while(1){
  35   2                      if(TF1){
  36   3                              TF1 = 0;
  37   3                              TH1 = 0xFC;
  38   3                              TL1 = 0x66;
  39   3                              if(j>7)
  40   3                                      j = 0;
  41   3                              else
  42   3                                      j = j + 1;
  43   3                              P0 = 0xFF;
  44   3                              switch(j) {
  45   4                                      case 0: ADDR2 = 0, ADDR1 = 0, ADDR0 = 0; P0 = pic[0]; break;
  46   4                                      case 1: ADDR2 = 0, ADDR1 = 0, ADDR0 = 1; P0 = pic[1]; break;
  47   4                                      case 2: ADDR2 = 0, ADDR1 = 1, ADDR0 = 0; P0 = pic[2]; break;
  48   4                                      case 3: ADDR2 = 0, ADDR1 = 1, ADDR0 = 1; P0 = pic[3]; break;
  49   4                                      case 4: ADDR2 = 1, ADDR1 = 0, ADDR0 = 0; P0 = pic[4]; break;
  50   4                                      case 5: ADDR2 = 1, ADDR1 = 0, ADDR0 = 1; P0 = pic[5]; break;
  51   4                                      case 6: ADDR2 = 1, ADDR1 = 1, ADDR0 = 0; P0 = pic[6]; break;
  52   4                                      case 7: ADDR2 = 1, ADDR1 = 1, ADDR0 = 1; P0 = pic[7]; break;
  53   4                                      default: break;
  54   4                              }
  55   3                      }
C51 COMPILER V8.06   ANIMATION                                                             04/18/2016 05:33:04 PAGE 2   

  56   2      
  57   2                      
  58   2                      if(TF0){
  59   3                              TF0 = 0;
  60   3                              TH0 = 0x4C;
  61   3                              TL0 = 0x00;
  62   3                              if(m>=4)
  63   3                                      m = 0;
  64   3                              if(cnt>=10){
  65   4                                      *(p+0) = mypic[m][0];
  66   4                                      *(p+1) = mypic[m][1];
  67   4                                      *(p+2) = mypic[m][2];
  68   4                                      *(p+3) = mypic[m][3];
  69   4                                      *(p+4) = mypic[m][4];
  70   4                                      *(p+5) = mypic[m][5];
  71   4                                      *(p+6) = mypic[m][6];
  72   4                                      *(p+7) = mypic[m][7];
  73   4                                      m = m + 1;
  74   4                                      cnt = 0;
  75   4                              }
  76   3                              cnt = cnt + 1;
  77   3                      }               
  78   2              }       
  79   1      }
  80                  
  81          
  82          
  83          
  84          
  85          
  86          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    402    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     86    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
